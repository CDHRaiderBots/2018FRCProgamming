// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2450.Stan;

import org.usfirst.frc2450.Stan.commands.*;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.JoystickButton;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton leftButton4OpenGearCommand;
    public JoystickButton leftButton6CloseGearCommand;
    public JoystickButton leftButton5GearUpCommand;
    public JoystickButton leftButton3GearDownCommand;
    public Joystick leftJoystick;
    public JoystickButton rightButton5CameraServoMove;
    public JoystickButton rightButton6RopeClimbFastOn;
    public JoystickButton rightButton4StopRopeClimb;
    public Joystick rightJoystick;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        rightJoystick = new Joystick(0);
        
        rightButton4StopRopeClimb = new JoystickButton(rightJoystick, 4);
        rightButton4StopRopeClimb.whileHeld(new StopRopeCllimb());
        rightButton6RopeClimbFastOn = new JoystickButton(rightJoystick, 6);
        rightButton6RopeClimbFastOn.whileHeld(new RopeClimbFastOn());
        rightButton5CameraServoMove = new JoystickButton(rightJoystick, 5);
        rightButton5CameraServoMove.whenPressed(new CameraServoMoveToggleFront());
        leftJoystick = new Joystick(1);
        
        leftButton3GearDownCommand = new JoystickButton(leftJoystick, 3);
        leftButton3GearDownCommand.whenPressed(new GearDownCommand());
        leftButton5GearUpCommand = new JoystickButton(leftJoystick, 5);
        leftButton5GearUpCommand.whenPressed(new GearUpCommand());
        leftButton6CloseGearCommand = new JoystickButton(leftJoystick, 6);
        leftButton6CloseGearCommand.whileHeld(new CloseGearCommand());
        leftButton4OpenGearCommand = new JoystickButton(leftJoystick, 4);
        leftButton4OpenGearCommand.whileHeld(new OpenGearCommand());


        // SmartDashboard Buttons

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getLeftJoystick() {
        return leftJoystick;
    }

    public Joystick getRightJoystick() {
        return rightJoystick;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

