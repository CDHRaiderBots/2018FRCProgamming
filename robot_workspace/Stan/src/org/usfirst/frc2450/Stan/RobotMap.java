// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2450.Stan;

import org.usfirst.frc2450.Stan.subsystems.CameraSubsystem;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.AnalogPotentiometer;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Servo;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.VictorSP;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveTrainSubsystemLeftMotor;
    public static SpeedController driveTrainSubsystemRightMotor;
    public static RobotDrive driveTrainSubsystemRobotDrive2;
    public static AnalogGyro driveTrainSubsystemGyroGyro;
    public static SpeedController cameraSubsystemLEDController;
    public static Servo cameraSubsystemCameraServo;
    public static Servo gearSubsystemLeftGearServo;
    public static Servo gearSubsystemRightGearServo;
    public static SpeedController gearSubsystemGearMotor;
    public static AnalogPotentiometer gearSubsystemStringPotentiometer;
    public static SpeedController ropeSubsystemSpeedController1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static double leftGearServoOpen = 0;
    public static double rightGearServoOpen = 1;
    public static final double leftGearServoClosed = 0.3;
    public static final double rightGearServoClosed = 0.66;
    public static double leftGearServoUp = 0.165;
    public static double rightGearServoUp = 0.8;
    public static double gearUp =  0.166;
    public static double gearDown = 0.65;
    public static double cameraServoFront = .8;
    public static double cameraServoBack = 0.065;
    public static boolean chuteFront = false;
    
    
    
    
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainSubsystemLeftMotor = new Spark(0);
        LiveWindow.addActuator("DriveTrainSubsystem", "LeftMotor", (Spark) driveTrainSubsystemLeftMotor);
        
        driveTrainSubsystemRightMotor = new Spark(1);
        LiveWindow.addActuator("DriveTrainSubsystem", "RightMotor", (Spark) driveTrainSubsystemRightMotor);
        
        driveTrainSubsystemRobotDrive2 = new RobotDrive(driveTrainSubsystemLeftMotor, driveTrainSubsystemRightMotor);
        
        driveTrainSubsystemRobotDrive2.setSafetyEnabled(true);
        driveTrainSubsystemRobotDrive2.setExpiration(0.1);
        driveTrainSubsystemRobotDrive2.setSensitivity(0.5);
        driveTrainSubsystemRobotDrive2.setMaxOutput(1.0);
        driveTrainSubsystemRobotDrive2.setInvertedMotor(RobotDrive.MotorType.kRearLeft, true);
        driveTrainSubsystemRobotDrive2.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);
        driveTrainSubsystemGyroGyro = new AnalogGyro(1);
        LiveWindow.addSensor("DriveTrainSubsystem", "GyroGyro", driveTrainSubsystemGyroGyro);
        driveTrainSubsystemGyroGyro.setSensitivity(0.007);
        cameraSubsystemLEDController = new VictorSP(7);
        LiveWindow.addActuator("CameraSubsystem", "LEDController", (VictorSP) cameraSubsystemLEDController);
        
        cameraSubsystemCameraServo = new Servo(5);
        LiveWindow.addActuator("CameraSubsystem", "CameraServo", cameraSubsystemCameraServo);
        
        gearSubsystemLeftGearServo = new Servo(3);
        LiveWindow.addActuator("GearSubsystem", "LeftGearServo", gearSubsystemLeftGearServo);
        
        gearSubsystemRightGearServo = new Servo(4);
        LiveWindow.addActuator("GearSubsystem", "RightGearServo", gearSubsystemRightGearServo);
        
        gearSubsystemGearMotor = new Spark(2);
        LiveWindow.addActuator("GearSubsystem", "GearMotor", (Spark) gearSubsystemGearMotor);
        
        gearSubsystemStringPotentiometer = new AnalogPotentiometer(0, 1.0, 0.0);
        LiveWindow.addSensor("GearSubsystem", "StringPotentiometer ", gearSubsystemStringPotentiometer);
        
        ropeSubsystemSpeedController1 = new Spark(6);
        LiveWindow.addActuator("RopeSubsystem", "Speed Controller 1", (Spark) ropeSubsystemSpeedController1);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    gearSubsystemLeftGearServo.set(leftGearServoClosed);
    gearSubsystemRightGearServo.set(rightGearServoClosed);
    

    cameraSubsystemCameraServo.set(cameraServoBack);
    
    
    }
    
}
