// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2450.TimmyTurner.commands;
import edu.wpi.first.wpilibj.Preferences;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc2450.TimmyTurner.Robot;
import org.usfirst.frc2450.TimmyTurner.RobotMap;

/**
 *
 */
public class TurnRight extends Command {
	Preferences prefs; 
	double targetangle;
	double targetdivident;
	double targetspeed;
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public TurnRight() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	RobotMap.gyroSPI.reset();
    	prefs = Preferences.getInstance();
    	targetangle = prefs.getDouble("targetangle", 1.0);
    	targetdivident = prefs.getDouble("targetdivident", 250.0);
    	targetspeed = prefs.getDouble("targetspeed", 0.2);
    }
    
    private double speed()
    {
    	return targetspeed + (targetangle - RobotMap.gyroSPI.getAngle())/targetdivident;
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
//    	double turnfraction = 1 - ((90 - RobotMap.driveTrainSubsystemGyro.getAngle())/ 90);
//    	org.usfirst.frc2450.TimmyTurner.RobotMap.driveTrainSubsystemLeftMotor.set(0.57 * turnfraction);
//    	org.usfirst.frc2450.TimmyTurner.RobotMap.driveTrainSubsystemRightMotor.set(0.5 * turnfraction);
    	
    	org.usfirst.frc2450.TimmyTurner.RobotMap.driveTrainSubsystemLeftMotor.set(speed());
    	org.usfirst.frc2450.TimmyTurner.RobotMap.driveTrainSubsystemRightMotor.set(speed());
    	
    	
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return (RobotMap.gyroSPI.getAngle() >= targetangle);
    }

    // Called once after isFinished returns true
    protected void end() {
    	org.usfirst.frc2450.TimmyTurner.RobotMap.driveTrainSubsystemRobotDrive2.stopMotor();
    	RobotMap.driveTrainSubsystemRightEncoder.reset();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
