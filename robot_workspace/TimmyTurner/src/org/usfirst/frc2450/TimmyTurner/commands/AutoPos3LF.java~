// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package org.usfirst.frc2450.TimmyTurner.commands;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc2450.TimmyTurner.Robot;
import org.usfirst.frc2450.TimmyTurner.RobotMap;
import org.usfirst.frc2450.TimmyTurner.commands.DriveForward;

/**
 *
 */
public class AutoPos3LF extends Command {

	// left and right
	int state;
	private DriveForward driveforward;
	private DriveForward driveforward1;
	private DriveForward driveforward2;
	private DriveForward driveforward3;
	private TurnLeft turnleft;
	private TurnRight turnright;
	private CubeEject eject;
	private static final int beginDrive = 0;
	// right
	private static final int checkDrive = 1;
	// left

	private static final int checkDrive1 = 1;
	private static final int checkTurn1 = 2;
	private static final int checkDrive2 = 3;
	private static final int checkTurn2 = 4;
	private static final int checkDrive3 = 5;
	private static final int done = 6;

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
	public AutoPos3LF() {
		driveforward = new DriveForward(4.0);
		driveforward1 = new DriveForward(1.0);
		driveforward2 = new DriveForward(2.0);
		driveforward3 = new DriveForward(3.0);
		turnleft = new TurnLeft();
		turnright = new TurnRight();
		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

		// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
		// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	}

	// Called just before this Command runs the first time
	protected void initialize() {
		state = 0;
	}

	// Called repeatedly when this Command is scheduled to run
	protected void execute() {

//-------LEFT---------
//flfrf
		
		switch (state) {

		case beginDrive: {
			driveforward1.start();
			state++;
			break;
		}
		case checkDrive1: {
			if (driveforward1.isFinished()) {
				turnleft.start();
				state++;
			}

			break;
		}
		case checkTurn1: {
			if (turnleft.isFinished()) {
				driveforward2.start();
				state++;
			}

			break;
		}
		case checkDrive2: {
			if (driveforward2.isFinished()) {
				turnright.start();
				state++;
			}
			break;
		}
		case checkTurn2: {
			if (turnright.isFinished()) {
				driveforward3.start();
				state++;
			}
			break;
		}
		case checkDrive3: {
			if (driveforward3.isFinished()) {
				eject.start();
				state++;
			}
			break;
		}
		case done: 
			{
			break;
			}
		}
	

		
//			switch (state) {
//			case beginDrive: {
//				driveforward.start();
//				state++;
//				break;
//			}
//			case checkDrive: {
//				if (driveforward.isFinished	()) {
//					RobotMap.eject.start(	);
//					state++;
//				}
//				break;
//			}
//			case done: {
//				break;
//			}
//			
//		}
		
	}


	// Make this return true when this Command no longer needs to run execute()
	protected boolean isFinished() {
		return (state == done);
	}

	// Called once after isFinished returns true
	protected void end() {
	}

	// Called when another command which requires one or more of the same
	// subsystems is scheduled to run
	protected void interrupted() {
	}
}
